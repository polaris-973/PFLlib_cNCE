Join ratio / total clients: 1.0 / 20
Finished creating server and clients.
-------------Round number: 0-------------
Evaluate global model
loss_sup: 7.3072509765625
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([ 3.1140, 10.8122,  4.2180,  5.6585,  7.8437,  2.8099,  3.3438,  2.6467,
         6.7923,  9.3862, 11.8896,  3.5986,  5.2410, 20.1354, 16.0394, 15.1569,
        10.0916,  6.1969, 11.4027,  3.0205, 14.7482, 10.4575,  5.6789,  7.2067,
        13.0210, 26.9105,  8.7415, 19.8114, 17.0535,  5.7852, 16.9500, 13.3361,
        14.5504,  4.5007,  3.6669,  5.3777,  6.7771, 23.1713, 11.0650,  5.7461,
         9.8466,  9.2081,  6.6748,  3.3164,  7.9993,  3.1325,  5.9594,  3.6551,
        11.8707,  6.1585,  4.3004,  2.2152,  5.8832,  9.4667,  2.3409,  8.5589,
         7.0731, 11.6052,  7.4435,  2.8324,  7.2987, 12.5250,  5.8923,  7.3264],
       device='cuda:0', grad_fn=<SumBackward1>)
after - aug_logits: tensor([ 3.1140, 10.8122,  4.2180,  5.6585,  7.8437,  2.8099,  3.3438,  2.6467,
         6.7923,  9.3862, 11.8896,  3.5986,  5.2410, 20.1354, 16.0394, 15.1569,
        10.0916,  6.1969, 11.4027,  3.0205, 14.7482, 10.4575,  5.6789,  7.2067,
        13.0210, 26.9105,  8.7415, 19.8114, 17.0535,  5.7852, 16.9500, 13.3361,
        14.5504,  4.5007,  3.6669,  5.3777,  6.7771, 23.1713, 11.0650,  5.7461,
         9.8466,  9.2081,  6.6748,  3.3164,  7.9993,  3.1325,  5.9594,  3.6551,
        11.8707,  6.1585,  4.3004,  2.2152,  5.8832,  9.4667,  2.3409,  8.5589,
         7.0731, 11.6052,  7.4435,  2.8324,  7.2987, 12.5250,  5.8923,  7.3264],
       device='cuda:0', grad_fn=<DivBackward0>)
loss_cNCE: -35889.8359375
loss_sup: nan
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([6.6475e+19, 1.3805e+19, 6.9744e+18, 3.0428e+19, 7.3647e+19, 1.2011e+19,
        3.9955e+19, 8.6353e+18, 3.6650e+18, 1.2180e+20, 2.6790e+19, 4.3985e+19,
        3.7602e+17, 8.8556e+19, 2.0266e+19, 1.7223e+20, 7.4436e+19, 1.1169e+18,
        2.6032e+18, 5.7640e+18, 2.1384e+19, 1.2487e+19, 2.4713e+19, 2.7202e+17,
        6.8941e+18, 1.1991e+19, 5.0262e+19, 1.6422e+18, 6.2562e+18, 1.3457e+20,
        1.3353e+20, 1.3056e+19, 3.8499e+19, 1.6252e+19, 7.1651e+19, 3.9956e+16,
        4.6344e+18, 8.6206e+19, 3.3747e+20, 1.9914e+19, 2.6596e+19, 5.1715e+18,
        2.7269e+19, 1.6364e+20, 1.1455e+20, 2.9703e+20, 1.3113e+19, 8.5327e+19,
        5.0519e+19, 1.3744e+19, 2.7135e+19, 9.5352e+19, 9.3733e+16, 6.6708e+17,
        8.7738e+19, 5.1178e+19, 2.5275e+18, 1.9307e+20, 7.2132e+17, 7.9003e+19,
        1.0052e+19, 2.5856e+18, 1.8564e+18, 7.6393e+19], device='cuda:0',
       grad_fn=<SumBackward1>)
after - aug_logits: tensor([6.6475e+19, 1.3805e+19, 6.9744e+18, 3.0428e+19, 7.3647e+19, 1.2011e+19,
        3.9955e+19, 8.6353e+18, 3.6650e+18, 1.2180e+20, 2.6790e+19, 4.3985e+19,
        3.7602e+17, 8.8556e+19, 2.0266e+19, 1.7223e+20, 7.4436e+19, 1.1169e+18,
        2.6032e+18, 5.7640e+18, 2.1384e+19, 1.2487e+19, 2.4713e+19, 2.7202e+17,
        6.8941e+18, 1.1991e+19, 5.0262e+19, 1.6422e+18, 6.2562e+18, 1.3457e+20,
        1.3353e+20, 1.3056e+19, 3.8499e+19, 1.6252e+19, 7.1651e+19, 3.9956e+16,
        4.6344e+18, 8.6206e+19, 3.3747e+20, 1.9914e+19, 2.6596e+19, 5.1715e+18,
        2.7269e+19, 1.6364e+20, 1.1455e+20, 2.9703e+20, 1.3113e+19, 8.5327e+19,
        5.0519e+19, 1.3744e+19, 2.7135e+19, 9.5352e+19, 9.3733e+16, 6.6708e+17,
        8.7738e+19, 5.1178e+19, 2.5275e+18, 1.9307e+20, 7.2132e+17, 7.9003e+19,
        1.0052e+19, 2.5856e+18, 1.8564e+18, 7.6393e+19], device='cuda:0',
       grad_fn=<DivBackward0>)
loss_cNCE: -inf
loss_sup: nan
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<SumBackward1>)
after - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<DivBackward0>)
loss_cNCE: nan
loss_sup: nan
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<SumBackward1>)
after - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<DivBackward0>)
loss_cNCE: nan
loss_sup: nan
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<SumBackward1>)
after - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<DivBackward0>)
loss_cNCE: nan
loss_sup: nan
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<SumBackward1>)
after - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<DivBackward0>)
loss_cNCE: nan
loss_sup: nan
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<SumBackward1>)
after - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<DivBackward0>)
loss_cNCE: nan
loss_sup: nan
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<SumBackward1>)
after - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<DivBackward0>)
loss_cNCE: nan
loss_sup: nan
before - shape of anchor_dot_contrast_aug: torch.Size([64, 2])
after - shape of anchor_dot_contrast_aug: torch.Size([64, 1])
before - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<SumBackward1>)
after - aug_logits: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', grad_fn=<DivBackward0>)
